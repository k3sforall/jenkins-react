apiVersion: apps/v1
kind: Deployment
metadata:
  name: dokjongban-jen-react-service-deployment
  namespace: default
  labels:
    domain: dokjongban-com
    app: dokjongban-jen-react-service
    app.kubernetes.io/managed-by: argocd
    app.kubernetes.io/instance: dokjongban-jen-react-service
    dokjongban-react-track: blue
  annotations:
    kubernetes.io/change-cause: "version: ghcr.io/k3sforall/create-react-app-test-app:0.1.1"
    argocd.argoproj.io/sync-wave: "2"
spec:
  replicas: 1
  selector:
    matchLabels:
      domain: dokjongban-com
      app: dokjongban-jen-react-service
      dokjongban-react-track: blue
  template:
    metadata:
      labels:
        domain: dokjongban-com
        app: dokjongban-jen-react-service
        app.kubernetes.io/instance: dokjongban-jen-react-service
        dokjongban-react-track: blue
    spec:
      # ▼ GHCR 프라이빗 이미지 풀을 위한 자격증명 시크릿 참조 (default 네임스페이스에 존재해야 함)
      imagePullSecrets:
        - name: ghcr-dockerconfig
      containers:
      - name: dokjongban-jen-react-service
        image: ghcr.io/k3sforall/jenkins-react:sha-107e8bf
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        readinessProbe:
          httpGet: { path: "/", port: 3000 }
          initialDelaySeconds: 3
          periodSeconds: 10
        livenessProbe:
          httpGet: { path: "/", port: 3000 }
          initialDelaySeconds: 10
          periodSeconds: 20
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
